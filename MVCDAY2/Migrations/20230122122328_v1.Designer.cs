// <auto-generated />
using System;
using MVCDAY2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCDAY2.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230122122328_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCDAY2.Models.department", b =>
                {
                    b.Property<int?>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Number"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("employeeSSN")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startdate")
                        .HasColumnType("date");

                    b.HasKey("Number");

                    b.HasIndex("employeeSSN")
                        .IsUnique()
                        .HasFilter("[employeeSSN] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVCDAY2.Models.dependent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<int?>("ESSN")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeSSN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSSN");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("MVCDAY2.Models.employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Bdate")
                        .HasColumnType("date");

                    b.Property<int?>("Department2Number")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Minit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int?>("deptid")
                        .HasColumnType("int");

                    b.Property<int?>("employeeSSN")
                        .HasColumnType("int");

                    b.Property<int?>("super")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("Department2Number");

                    b.HasIndex("employeeSSN");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVCDAY2.Models.locations", b =>
                {
                    b.Property<int?>("deptnum")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("departmentNumber")
                        .HasColumnType("int");

                    b.HasKey("deptnum", "location");

                    b.HasIndex("departmentNumber");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MVCDAY2.Models.project", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int?>("DepartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Number");

                    b.HasIndex("DepartmentNumber");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MVCDAY2.Models.works_on", b =>
                {
                    b.Property<int?>("ESSN")
                        .HasColumnType("int");

                    b.Property<int?>("Pnum")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeSSN")
                        .HasColumnType("int");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectNumber")
                        .HasColumnType("int");

                    b.HasKey("ESSN", "Pnum");

                    b.HasIndex("EmployeeSSN");

                    b.HasIndex("ProjectNumber");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("MVCDAY2.Models.department", b =>
                {
                    b.HasOne("MVCDAY2.Models.employee", "employee")
                        .WithOne("Department")
                        .HasForeignKey("MVCDAY2.Models.department", "employeeSSN");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("MVCDAY2.Models.dependent", b =>
                {
                    b.HasOne("MVCDAY2.Models.employee", "Employee")
                        .WithMany("dependents")
                        .HasForeignKey("EmployeeSSN");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("MVCDAY2.Models.employee", b =>
                {
                    b.HasOne("MVCDAY2.Models.department", "Department2")
                        .WithMany("employees")
                        .HasForeignKey("Department2Number");

                    b.HasOne("MVCDAY2.Models.employee", null)
                        .WithMany("supervisor")
                        .HasForeignKey("employeeSSN");

                    b.Navigation("Department2");
                });

            modelBuilder.Entity("MVCDAY2.Models.locations", b =>
                {
                    b.HasOne("MVCDAY2.Models.department", null)
                        .WithMany("locations")
                        .HasForeignKey("departmentNumber");
                });

            modelBuilder.Entity("MVCDAY2.Models.project", b =>
                {
                    b.HasOne("MVCDAY2.Models.department", "Department")
                        .WithMany("projects")
                        .HasForeignKey("DepartmentNumber");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVCDAY2.Models.works_on", b =>
                {
                    b.HasOne("MVCDAY2.Models.employee", "Employee")
                        .WithMany("works_Ons")
                        .HasForeignKey("EmployeeSSN");

                    b.HasOne("MVCDAY2.Models.project", "Project")
                        .WithMany("works_Ons")
                        .HasForeignKey("ProjectNumber");

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MVCDAY2.Models.department", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("locations");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("MVCDAY2.Models.employee", b =>
                {
                    b.Navigation("Department");

                    b.Navigation("dependents");

                    b.Navigation("supervisor");

                    b.Navigation("works_Ons");
                });

            modelBuilder.Entity("MVCDAY2.Models.project", b =>
                {
                    b.Navigation("works_Ons");
                });
#pragma warning restore 612, 618
        }
    }
}
